<?php

namespace App\Http\Controllers\API\Client;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Storage;

class UserProfileController extends Controller
{
    // Láº¥y thÃ´ng tin há»“ sÆ¡ cÃ¡ nhÃ¢n
    public function show(Request $request)
    {
        return response()->json($request->user());
    }

    // Cáº­p nháº­t thÃ´ng tin há»“ sÆ¡ cÃ¡ nhÃ¢n
    public function update(Request $request)
    {
        $user = $request->user();

        $validated = $request->validate([
            'name' => 'required|string|max:255',
            'email' => [
                'required',
                'email',
                'max:255',
                Rule::unique('users')->ignore($user->id),
            ],
            'phone_number' => 'nullable|string|max:20',
            'gender' => 'nullable|in:male,female,other',
            'birthday' => 'nullable|date',
            'password' => 'nullable|string|min:6|confirmed',
            'avatar' => 'nullable|image|mimes:jpeg,png,jpg|max:2048',
        ], [
            'name.required' => 'TÃªn khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng.',
            'name.max' => 'TÃªn khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 255 kÃ½ tá»±.',
            'name.string' => 'TÃªn pháº£i lÃ  chuá»—i kÃ½ tá»±.',

            'email.required' => 'Email khÃ´ng Ä‘Æ°á»£c Ä‘á»ƒ trá»‘ng.',
            'email.email' => 'Email khÃ´ng Ä‘Ãºng Ä‘á»‹nh dáº¡ng.',
            'email.max' => 'Email khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 255 kÃ½ tá»±.',
            'email.unique' => 'Email Ä‘Ã£ tá»“n táº¡i.',

            'phone_number.string' => 'Sá»‘ Ä‘iá»‡n thoáº¡i pháº£i lÃ  chuá»—i.',
            'phone_number.max' => 'Sá»‘ Ä‘iá»‡n thoáº¡i khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 20 kÃ½ tá»±.',

            'gender.in' => 'Giá»›i tÃ­nh pháº£i lÃ  male, female hoáº·c other.',

            'birthday.date' => 'NgÃ y sinh pháº£i lÃ  Ä‘á»‹nh dáº¡ng ngÃ y há»£p lá»‡.',

            'password.min' => 'Máº­t kháº©u pháº£i cÃ³ Ã­t nháº¥t 6 kÃ½ tá»±.',
            'password.confirmed' => 'XÃ¡c nháº­n máº­t kháº©u khÃ´ng khá»›p.',

            'avatar.image' => 'áº¢nh Ä‘áº¡i diá»‡n pháº£i lÃ  tá»‡p hÃ¬nh áº£nh.',
            'avatar.mimes' => 'áº¢nh Ä‘áº¡i diá»‡n chá»‰ Ä‘Æ°á»£c Ä‘á»‹nh dáº¡ng jpeg, png, jpg.',
            'avatar.max' => 'áº¢nh Ä‘áº¡i diá»‡n khÃ´ng Ä‘Æ°á»£c vÆ°á»£t quÃ¡ 2MB.',
        ]);

        $user->fill($validated);

        $user->phone_number = $validated['phone_number'] ?? null;
        $user->gender = $validated['gender'] ?? null;
        $user->birthday = $validated['birthday'] ?? null;

        // Xá»­ lÃ½ áº£nh Ä‘áº¡i diá»‡n má»›i (avatar)
        if ($request->hasFile('avatar')) {
            // XoÃ¡ áº£nh cÅ© náº¿u tá»“n táº¡i
            if ($user->avatar && Storage::disk('public')->exists($user->avatar)) {
                Storage::disk('public')->delete($user->avatar);
            }

            // ğŸ‘‰ LÆ°u áº£nh má»›i
            $path = $request->file('avatar')->store('avatars', 'public');
            $user->avatar = $path;
        }

        // Cáº­p nháº­t máº­t kháº©u náº¿u cÃ³
        if (!empty($validated['password'])) {
            $user->password = Hash::make($validated['password']);
        }

        $user->save();

        return response()->json([
            'message' => 'Cáº­p nháº­t thÃ´ng tin thÃ nh cÃ´ng.',
            'user' => $user,
        ]);
    }
}
